---
layout: post
title:  "[RxJava] RxJava 파헤치기 - Rxjava란? - (1)"
subtitle:   "Rxjava "
categories: devlog
tags: rxjava

---



이미 RxJava를 사용을 하고 있기는 하지만 RxJava를 올바르게 사용하고 있는지
책과 스터디를 통해 다시 한번 정리함으로써 개념을 확고히 하고 검색을 통해 오신 분들도 
Rxjava를 사용하면서 놓쳤던 개념들 있으셨다면 알아가셨으면 좋겠습니다.
그리고 제가 쓴 글 중에 만약 틀린 부분이 있다면 지적해 주시면 감사하겠습니다!

## Reactive Programming이란?


Rxjava를 공부하기에 앞서서 Reactive Programming이란 무엇인가에 대해 알아야 할 필요가 있습니다.
Reactive Programming이란, 데이터가 통지될 때마다 관련 프로그램이 반응(Reaction)해 데이터를 처리하는
프로그래밍 방식입니다.

예를 들면, GPS 위치 정보가 변경될 때의 데이터 전송 흐름을 상상해보면 이해가 쉽습니다. 이동해 위치 정보가 변경될 때마다
데이터를 전송하고 이동을 멈추면 데이터 전송도 중지하는 것 처럼 생성되는 데이터를 한 번에 보내지 않고 각각의 데이터가 생성될 때마다
순서대로 보냅니다. 이러한 데이터 흐름을 데이터 스트림(data stream)이라고 합니다.

다른 예를 들면, 'abc'라고 입력하면 입력 이벤트가 발생 할 때 다음과 같은 데이터가 생성된다고 생각할 수 있습니다.

1. [a]
2. [ab]
3. [abc]

버튼을 누르는 행위에 대한 구체적인 데이터가 없더라도 '버튼을 누르다'라는 이벤트는 데이터가 생성된다고 생각할 수 있습니다.
버튼을 계속 누른다면 누른 횟수만큼 '버튼을 '누르다'라는 이벤트가 계속 발생합니다. 즉, 이벤트도 발생할 때마다 데이터를
전송하는 데이터 스트림으로 다룰 수 있습니다.

리액티브 프로그래밍은  이러한 데이터 스트림으로 데이터를 전달받은 프로그램이 그때마다 적절히 처리할 수 있게 구성되었습니다.

종합해보면 프로그램이 필요한 **데이터를 직접 가져와 처리하는 것**이 아니라 **보내온 데이터를 받은 시점에 반응해 이를 처리하는 프로그램을 만드는 것**이 **Reactive Programming**입니다.


